{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nexport let RequestStatus;\n\n(function (RequestStatus) {\n  RequestStatus[\"IDLE\"] = \"idle\";\n  RequestStatus[\"LOADING\"] = \"loading\";\n  RequestStatus[\"ERROR\"] = \"error\";\n  RequestStatus[\"SUCCESS\"] = \"success\";\n})(RequestStatus || (RequestStatus = {}));\n\nfunction useRequest(props) {\n  _s();\n\n  const {\n    url,\n    method,\n    initialData = [],\n    initialState = RequestStatus.IDLE\n  } = props;\n  const [data, setData] = React.useState(null);\n  const [error, setError] = React.useState('');\n  const [status, setStatus] = React.useState(initialState);\n  const internalFetch = React.useCallback(async () => {\n    setStatus(RequestStatus.LOADING);\n\n    try {\n      const response = await axios({\n        url,\n        method\n      });\n      setData(response.data);\n      setStatus(RequestStatus.SUCCESS);\n    } catch (error) {\n      setError(error);\n      setStatus(RequestStatus.ERROR);\n    }\n  }, [url, method]);\n  React.useEffect(() => {\n    internalFetch();\n  }, [internalFetch, initialState, url, method, initialData]);\n  return {\n    data,\n    error,\n    status\n  };\n}\n\n_s(useRequest, \"iW4Vt28dPX5o5MOZ1oMkFxzAMNI=\");\n\nexport default useRequest;","map":{"version":3,"names":["React","axios","RequestStatus","useRequest","props","url","method","initialData","initialState","IDLE","data","setData","useState","error","setError","status","setStatus","internalFetch","useCallback","LOADING","response","SUCCESS","ERROR","useEffect"],"sources":["/Users/lixupeng/Local-Work/frontend/apps/dashboard/src/sharedComponents/useRequest.ts"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nexport enum RequestStatus {\n    IDLE = 'idle',\n    LOADING = 'loading',\n    ERROR = 'error',\n    SUCCESS = 'success',\n}\n\nexport interface RequestProps {\n    url: string;\n    method: string;\n    initialData?: any;\n    initialState?: RequestStatus;\n}\n\nfunction useRequest(props: RequestProps) {\n  const { \n    url, \n    method, \n    initialData = [], \n    initialState = RequestStatus.IDLE\n} = props;\n  const [data, setData] = React.useState<any>(null);\n  const [error, setError] = React.useState<string>('');\n  const [status, setStatus] = React.useState<RequestStatus>(initialState);\n\n  const internalFetch = React.useCallback(async () => {\n    setStatus(RequestStatus.LOADING);\n    try {\n        const response = await axios({\n            url,\n            method,\n        });\n        setData(response.data);\n        setStatus(RequestStatus.SUCCESS);\n    } catch (error: any) {\n        setError(error);\n        setStatus(RequestStatus.ERROR);\n    }\n  }, [url, method]);\n\n  React.useEffect(() => {\n    internalFetch();\n  }, [internalFetch, initialState, url, method, initialData]);\n\n  return { data, error, status };\n}\n\nexport default useRequest;"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,WAAYC,aAAZ;;WAAYA,a;EAAAA,a;EAAAA,a;EAAAA,a;EAAAA,a;GAAAA,a,KAAAA,a;;AAcZ,SAASC,UAAT,CAAoBC,KAApB,EAAyC;EAAA;;EACvC,MAAM;IACJC,GADI;IAEJC,MAFI;IAGJC,WAAW,GAAG,EAHV;IAIJC,YAAY,GAAGN,aAAa,CAACO;EAJzB,IAKJL,KALF;EAMA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAoB,IAApB,CAAxB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACY,QAAN,CAAuB,EAAvB,CAA1B;EACA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBhB,KAAK,CAACY,QAAN,CAA8BJ,YAA9B,CAA5B;EAEA,MAAMS,aAAa,GAAGjB,KAAK,CAACkB,WAAN,CAAkB,YAAY;IAClDF,SAAS,CAACd,aAAa,CAACiB,OAAf,CAAT;;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAAC;QACzBI,GADyB;QAEzBC;MAFyB,CAAD,CAA5B;MAIAK,OAAO,CAACS,QAAQ,CAACV,IAAV,CAAP;MACAM,SAAS,CAACd,aAAa,CAACmB,OAAf,CAAT;IACH,CAPD,CAOE,OAAOR,KAAP,EAAmB;MACjBC,QAAQ,CAACD,KAAD,CAAR;MACAG,SAAS,CAACd,aAAa,CAACoB,KAAf,CAAT;IACH;EACF,CAbqB,EAanB,CAACjB,GAAD,EAAMC,MAAN,CAbmB,CAAtB;EAeAN,KAAK,CAACuB,SAAN,CAAgB,MAAM;IACpBN,aAAa;EACd,CAFD,EAEG,CAACA,aAAD,EAAgBT,YAAhB,EAA8BH,GAA9B,EAAmCC,MAAnC,EAA2CC,WAA3C,CAFH;EAIA,OAAO;IAAEG,IAAF;IAAQG,KAAR;IAAeE;EAAf,CAAP;AACD;;GA/BQZ,U;;AAiCT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}